import time


class Client(process):

    def setup(servers, head, tail):
        # timeout and retransmit after 3 seconds
        # This is the only timeout in the design
        self.T = 3
        self.responses = set()
        self.seq = 0

    def receive(msg=('response', r), from_=tail):
        responses.add((tail,r))

    def send_update(update, amount, bank, account):
        uid = gen_uid(bank, account)
        while True:
            if not head:
                return 'unavailable'
            send((update, (uid, amount)), to=head)
            if await(some((_, (ruid, r)) in responses, has=(ruid == uid))):
                return r
            elif timeout(T):
                pass

    def gen_uid(bank, account):
        seq += 1
        return (self.id, bank, account, seq)

    def main():
        for x in range(10):
            reply = send_update('deposit', '40.00', 'Chase', '001')
            output('reply %s' % reply)
            time.sleep(1)
        output("Terminating..")
